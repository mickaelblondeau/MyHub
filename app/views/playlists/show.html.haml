%h2
  = @playlist.title

= @playlist.description

%h3 Categories
- @playlist.playlist_categories.each do |playlist_categorie|
  = link_to playlist_categorie.category.label, playlist_categorie.category
  - if can? :manage, playlist_categorie
    = link_to t('form.delete'), playlist_categorie, method: 'DELETE', data: { confirm: "#{t('form.sure')}" }

- if can? :manage, @playlist
  = simple_form_for PlaylistCategory.new do |f|
    = f.input :playlist_id, input_html: { value: @playlist.id }, as: :hidden
    = f.input :category_id, collection: Category.where.not(id:@playlist.categories.map(&:id)), prompt: t('form.choose_category'), label: t('form.category'), label_method: :label
    = f.button :submit

%h3 Videos

- @playlist.videos.each do |video|
  = link_to video.name, video
  %br

%h3 Participants
= link_to @playlist.user.email, user_path(@playlist.user)
(Owner)<br>
- @playlist.participations.each do |su|
  = link_to su.user.email, user_path(su.user)
  = su.comment
  - if can? :manage, @playlist
    = link_to t('form.delete'), su, method: 'DELETE', data: { confirm: "#{t('form.sure')}" }
  %br

- if can? :manage, @playlist
  %h3 Ajouter un participant
  = simple_form_for @new_participation do |f|
    = f.input :user_id, collection: User.where.not(id:@playlist.participations.map(&:user_id)).where.not(current_user.id), prompt: t('form.choose_user'), label: t('form.user'), label_method: :user_name
    = f.input :comment
    = f.input :playlist_id, input_html: { value: @playlist.id }, as: :hidden
    = f.button :submit

%br

%h3 Articles
- articles = Article.where('playlist_id = ?', @playlist.id)
- articles.each do |article|
  Par :
  = article.user.user_name
  <br>
  = article.title
  <br>
  = article.content
  <br>
  - if can? :delete, article
    = link_to t('views.delete_article'), article, method: 'DELETE', data: { confirm: "#{t('form.sure')}" }
  <hr>

- if can? :manage, @playlist
  %h3 Poster un article
  = simple_form_for Article.new do |f|
    = f.input :playlist_id, input_html: { value: @playlist.id }, as: :hidden
    = f.input :title, label: t('from.article_title')
    = f.input :content, label: t('from.article_content')
    = f.button :submit

= render partial: 'shared/likes', locals: Like::get_params(@playlist, current_user)
= render partial: 'shared/votes', locals: Vote::get_params(@playlist, current_user)
= render partial: 'shared/comments', locals: Comment::get_params(@playlist)

- if can? :index, Playlist
  = link_to t('views.return_series'), playlists_path